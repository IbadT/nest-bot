import { Ctx, Help, Start, Update, Command, Hears, On, Message, Action } from "nestjs-telegraf";
import { Context } from "telegraf";
import { TelegramService } from "./telegram.service";
import { ENUM_KEYBOARDS } from "./keyboards/hh_keyboards";

@Update()
export class TelegramUpdate {
    constructor(
        private readonly telegramService: TelegramService
    ) {}
    
    @Start()
    async startCommand(
        @Ctx() ctx: Context
    ) {
        await this.telegramService.showMainMenu(ctx);
    };


    @Help()
    async help(@Ctx() ctx: Context) {
        const helpText = `
            ü§ñ *–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞*:

            - */start*: –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –∏ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.
            - */help*: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ.

            *–ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π*:
            - *üîç –ù–∞–π—Ç–∏ –≤–∞–∫–∞–Ω—Å–∏–∏*: –ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞ hh.
            - *üìÑ –ú–æ–∏ –∑–∞—è–≤–∫–∏*: –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∞–∫–∞–Ω—Å–∏–π, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É.

            *–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤*:
            - *üìù –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç*: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ç–∏–ø–∞–º–∏ –≤–æ–ø—Ä–æ—Å–æ–≤.
            - *üìä –ú–æ–∏ —Ç–µ—Å—Ç—ã*: –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞—à–∏–º–∏ —Ç–µ—Å—Ç–∞–º–∏.

            *–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞*:
            - *üõ†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞*: –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º.
            - *üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π*: –ü—Ä—è–º–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
            - *üí¨ –ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π*: –ù–∞—á–∞—Ç—å –∂–∏–≤–æ–π —á–∞—Ç —Å –∞–≥–µ–Ω—Ç–æ–º –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
            - *‚ùì FAQ*: –ù–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã.

            *–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*:
            - *üë§ –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*: –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º.
            - *üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏*: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞.
            - *‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç*: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞, —É–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ –±–æ—Ç–æ–º.
            - *üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏*: –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.
            - *üîÑ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö*: –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
            - *‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏*: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –±–æ—Ç–∞.

            *–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω*:
            - *üõí –ú–∞–≥–∞–∑–∏–Ω*: –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ –ø–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤.
            - *üõçÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–æ–≤*: –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.
            - *üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞*: –ù–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä.
            - *üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞*: –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–æ–≤ –≤ –≤–∞—à–µ–π –∫–æ—Ä–∑–∏–Ω–µ.
            - *üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑*: –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ.

            –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–º–æ—â—å, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å! üòä
        `;
        await ctx.reply(helpText, { parse_mode: 'Markdown' });
    };


    @Action(ENUM_KEYBOARDS.ADMIN_PANEL)
    async adminPanel(@Ctx() ctx: Context) {
        await this.telegramService.adminPanel(ctx);
    };

    @Action(ENUM_KEYBOARDS.SEARCH_JOBS)
    async searchJobs(@Ctx() ctx: Context) {
        // –≤—ã–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏
        await this.telegramService.selectOptions(ctx)
        // await this.telegramService.searchJobs(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.HH_REGISTER)
    async hhRegister(@Ctx() ctx: Context) {
        await this.telegramService.hhRegister(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.CREATE_TEST)
    async createTest(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.SHOP)
    async shop(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.MY_APPLICATIONS)
    async myApplications(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.TECH_SUPPORT)
    async teachSupport(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.JOB_CATEGORY)
    async jubCategory(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.LOCATION)
    async location(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.SALARY_RANGE)
    async salaryRange(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.HOME)
    async home(@Ctx() ctx: Context) {
        await this.telegramService.backToMain(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.SEARCH)
    async search(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.ADD_QUESTION)
    async addQuestion(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.SUBMIT_TEST)
    async submitTest(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.CANCEL)
    async cancel(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.CONTACT_SUPPORT)
    async contactSupport(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.CHAT_SUPPORT)
    async chatSupport(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.FAQ)
    async faq(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };
    
    @Action(ENUM_KEYBOARDS.BACK_TO_MAIN)
    async backToMain(@Ctx() ctx: Context) {
        await this.telegramService.backToMain(ctx);
    };

    @Action(ENUM_KEYBOARDS.VIEW_STATS)
    async viewStats(@Ctx() ctx: Context) {
        await this.telegramService.viewStats(ctx);
    };

    @Action(ENUM_KEYBOARDS.EDIT_CONTENT)
    async editContent(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.MANAGE_USERS)
    async manageUsers(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.BACKUP_DATA)
    async backupData(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.SETTINGS)
    async settings(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.VIEW_PRODUCTS)
    async viewProducts(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.SEARCH_PRODUCT)
    async searchProduct(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.MY_CART)
    async myCart(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.CHECKOUT)
    async checkout(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.VIEW_IMAGE)
    async viewImage(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.PRICE)
    async price(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.DESCRIPTION)
    async description(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.ADD_TO_CART)
    async addToCart(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.BACK_TO_PRODUCTS)
    async backToProducts(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };



    @Action(ENUM_KEYBOARDS.USER_COUNT)
    async userCount(@Ctx() ctx: Context) {
        await this.telegramService.userCount(ctx);
    };

    @Action(ENUM_KEYBOARDS.ACTIVE_SESSIONS)
    async activeSessions(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.COMMAND_USAGE)
    async commandUsage(@Ctx() ctx: Context) {
        // await this.telegramService.createAdmin(ctx);
    };

    @Action(ENUM_KEYBOARDS.BACK_TO_ADMIN)
    async backToAdmin(@Ctx() ctx: Context) {
        await this.telegramService.backToAdmin(ctx);
    };


    @Action(ENUM_KEYBOARDS.WRITE_DOWN_FOR_JOB)
    async writeDownForJob(@Ctx() ctx: Context) {
        await this.telegramService.writeDownForJob(ctx);
    };

    @Action(ENUM_KEYBOARDS.INPUT_KEYWORD_FOR_JOB)
    async inputKeywordForJob(@Ctx() ctx: Context) {
        await this.telegramService.inputKeywordForJob(ctx);
    };

    @Action(ENUM_KEYBOARDS.GET_KEYWORD_FOR_JOB)
    async getKeywordForJob(@Ctx() ctx: Context) {
        await this.telegramService.getKeywordForJob(ctx);
    };



    @Action(ENUM_KEYBOARDS.BACK_TO_WORK)
    async backToWork(@Ctx() ctx: Context) {
        await this.telegramService.backToWork(ctx);
    };



    
    @Action("AGREE")
    async agree(@Ctx() ctx: Context) {
        await this.telegramService.agree(ctx);
    };








    // @Action(ENUM_KEYBOARDS.BACK_TO_ADMIN_AND_DELETE_LAST)
    // async backToAdminAndDeleteLast(@Ctx() ctx: Context) {
    //     await this.telegramService.backToAdminAndDeleteLast(ctx);
    // };



















    @On("poll_answer")
    async poll(
        @Ctx() ctx: Context
    ) {
        return await this.telegramService.handlePollAnswer(ctx);
    }


    @On("text")
    async handleOnText(
        @Ctx() ctx: Context, @Message("text") message: string
    ): Promise<void> {
        await this.telegramService.onTextHandleAction(ctx, message);
    };

    







    // @Command('scene')
    // async onSceneCommand(@Ctx() ctx: Context): Promise<void> {
    //     await ctx.enter(HELLO_SCENE_ID);
    // };

    @Hears(['hi', 'hello', 'hey', 'qq'])
    async check(
        @Ctx() ctx: Context
    ) {
        await ctx.reply("123");
    };
};


